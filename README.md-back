# 🏥 Health Care - Backend

## Overview  
The **Health Care** backend is a RESTful API built using **Node.js, Express.js, and MongoDB**, providing secure authentication, patient health data management, and role-based access control. This API serves as the backend for the **Bayer Health Care** web application, enabling patients to track their **health goals, medications, and personal information**.

---

## 🚀 Features  

✅ **User Authentication** – Secure login & registration with JWT  
✅ **Role-based Access Control** – Patients have restricted access  
✅ **Health Goals & Medications Management** – Patients can view their health details  
✅ **Secure Password Handling** – Bcrypt.js for password encryption  
✅ **REST API with Express.js** – Structured endpoints for managing patient data  
✅ **MongoDB Integration** – NoSQL database for scalable data storage  

---

## 🛠 Tech Stack  

- **Node.js** – JavaScript runtime for server-side operations  
- **Express.js** – Fast and minimal web framework  
- **MongoDB** – NoSQL database for patient records  
- **Mongoose** – Object Data Modeling (ODM) for MongoDB  
- **JWT Authentication** – Secure login & session handling  
- **Bcrypt.js** – Hashing passwords for security  
- **Cors** – Cross-Origin Resource Sharing for API access  

---

## 📥 Installation & Setup  

### 1️⃣ Clone the Repository  
```sh
git clone https://github.com/your-username/bayer-health-care-backend.git
cd bayer-health-care-backend

2️⃣ Install Dependencies
npm install

3️⃣ Set Up Environment Variables
PORT=5000
MONGO_URI=your_mongodb_connection_string
JWT_SECRET=your_jwt_secret_key

▶️ Running the API
npm run dev

Production Mode
npm start

📌 API Endpoints
Authentication & User Management
Method	Endpoint	Description
POST	/api/auth/register	Register a new user (Patient)
POST	/api/auth/login	Authenticate user and get JWT token
GET	/api/auth/profile	Get logged-in user profile
PUT	/api/auth/update	Update user profile information

Patient Health Data
Method	Endpoint	Description
GET	/api/patient/dashboard	Get patient health overview
GET	/api/patient/medications	Get list of medications
PUT	/api/patient/update	Update patient personal details

Admin Routes (Future Enhancements)
Method	Endpoint	Description
GET	/api/admin/users	Get list of all users (Admin only)
DELETE	/api/admin/user/:id	Delete a user account (Admin only)

🔐 Authentication & Security
JWT Authentication – Ensures secure login sessions
Bcrypt Password Hashing – Encrypts passwords for security
Role-based Access Control (RBAC) – Restricts access for different users
CORS Handling – Enables frontend communication with the API

📂 Project Structure
bash
Copy
Edit
/bayer-health-care-backend
│── /controllers       # Business logic for API endpoints
│── /models            # Mongoose database schemas
│── /routes            # API endpoint definitions
│── /middlewares       # Authentication & authorization middleware
│── /config            # Configuration files (e.g., database connection)
│── index.js           # Main entry point for the backend
│── .env               # Environment variables (ignored in Git)
│── package.json       # Dependencies and scripts
│── README.md          # Project documentation

📈 Future Enhancements
✅ Admin Dashboard – Manage users, roles, and permissions
✅ Doctor’s Portal – Allow doctors to monitor patient health
✅ AI-based Health Insights – Analyze health trends and predictions
✅ Appointment Scheduling – Integrate booking system

📜 License
This project is licensed under the MIT License.

📧 Contact & Support
📌 Email: your-email@example.com
📌 GitHub: your-username

If you find any issues, feel free to open an issue or submit a pull request! 🚀
